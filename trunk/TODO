TODO input forms need to return unicode and php needs to know that DB
     stuff is in unicode
TODO USE LONGCHAR TYPE or CHARACTER SET clause
    * https://duckduckgo.com/?q=mariadb+utf8
    * http://karlssonondatabases.blogspot.com/2013/09/using-4-byte-utf-8-aka-3-byte-unicode.html
TODO add manager info to teams table (since manager doesn't have to be player)
BIG TODO more meaningful query error messages
BIG TODO SIMPLE, interactive score keeping??? runs per inning, substitutions...
TODO use a db connection pool
TODO use bootstrap CSS lib
TODO what php libs are available?
TODO convert site to Ruby on Rails?
TODO add player quotes and walk-up music (to be integrated with mobile platform)

From README:
I don't have a consistent naming convention for the outfield. The database uses LF, CF, RF, RC. In another place or two, I use LC instead of LF. I want the user to see LC/RC, but I wasn't sure if I should make the database more general and use special cases in the code. Oh, well.

QR codes for website!!
like phone numbers!! (that won't work if you're viewing the site from your phone)

=================================================================
Ideas from Kight:

calculate weights for preferred/ok/not ok positions
                      + abilities at those positions
                      + how many innings played at each
track bench time
- last minute abscense notices are not counted as bench time
- advance notices are considered bench time served

=================================================================

TODO use views?, e.g. for starters/non-starters
TODO associate login names to player names
TODO add league/season/whatever info pages
TODO Stats page! using R or Python...
TODO have a user poll like K did and ask communication preferences
TODO write tests for my library functions
TODO custom gender colors and other user preferences
TODO make these functions I'm writing return something sane and CLEAN. all the checking and stuff should be done in them
TODO I need to space the names better (but really I need an original field image) so they can't overlap (make sure the names won't wrap either)
TODO rounded corners on Field Layout player names, unless it looks bad with player thumbnails
TODO QR codes for website!! like phone numbers!! (that won't work if you're viewing the site from your phone)
* or do some other neat web trick
TODO orient the Field Layout graphic differently depending on if the team is Home/Away
TODO for editing pages, where database writes are made, use one-time-use session variables so that a refresh can send the action again. That is, the user needs to get authentication by putting in a password, a session variable is set, and when the action goes through, it gets unset.
    * um, well, this is possibly too over-protective
TODO team-style.css -- gets written to with PHP? each team in the teams table gets a hash and that hash is used as an id/class that can be used from CSS
TODO instead of checking time to see if a game has passed, just check if final scores are in the table...duh
     Better yet, show a warning if there are no scores and some time has passed since game time
TODO put interesting links on frontpage, like rulebooks, maybe?. put "powered by" + logos on frontpage
TODO add a little trophy icon next to name of team in 1st place of standings
TODO require password before database edits? as in: user can be logged in but must enter a password still for edits
TODO add functions like linkToTeam(teamID) that can be called from anywhere (but don't overdo it)
TODO add more info to page titles (i.e. name of site)
TODO on Calendar page, allow options to show all games for a league/season/team/player
TODO on Calendar page, put link on single-date page back to calendar, or even better, show the calendar!
TODO put database variables in a file outside the web root. they can still be accessed from PHP
TODO allow different views? i.e. players and managers could have different landing pages after logging in. Or is this only for managers?
TODO use javascript for reordering game lineups
TODO display relevant (or funny quotes) from deGrasse Tyson or Bill Nye or somebody lol
TODO I really must use prepared statements
TODO player pictures or avatars! i want to use a hash of player id + salt for filename so the images can't be easily pulled from an attacker. 
* player thumbnails on Field Layout
TODO write function to format phone numbers
TODO now i need a way to keep track of "state". i.e. when i go to roster page, i need to know which season/league/team. OR i can just use a default and allow a selection box to change
     * can i pass POST data between pages? or do i have to use hidden forms? there are global variables I can watch to keep track of state. meh.
     * YOU DO THIS WITH SESSION VARIABLES
TODO add license (AGPL) footer to every page. and make it possible to download according to license

=================================================================
These will be taken care of by DB redesign:

BIG TODO add roster table to database? instead of multiple players in players table where the only difference is the leagues/teams they are in. right now, there has to be multiple copies of each player if they are on multiple teams in a single league. having persistent players would make things easier, since that would mean more data changing every season
TODO keep track of forfeits
TODO add tourney games from last season. I think i need to alter the table definition first so games can have a tourney/regular/bye type
TODO concurrent db editing? This is taken care of by "transactions".
TODO have a way to add notes to player profiles
TODO need a secondary key in players table (i.e. driver's license #) because that would more easily ensure players don't accidentally get grouped together or clobbered on the player profile page
TODO add nickName column to players table

=================================================================

DONE do i want to call center field positions CF/Rover or LC/RC? Fix: this should change automatically in the UI depending on the number of players. positions are now *numbered* in the data
DONE add lineups table. every game may have a different lineup
DONE player profiles page
DONE tourney page/table
DONE add dayOfWeek column to leagues table, and update entries in the table to have a dayOfWeek
DONE UPDATE games table so that team columns are foreign keys:
     * CREATE TABLE games (gameID INT UNSIGNED AUTO_INCREMENT KEY NOT NULL, date DATE, time TIME, homeTeam VARCHAR(64), visitingTeam VARCHAR(64), finalHomeScore INT UNSIGNED, finalVisitingScore INT UNSIGNED, associatedLeague INT UNSIGNED, FOREIGN KEY(associatedLeague) REFERENCES leagues(leagueID), FOREIGN KEY(homeTeam) REFERENCES teams(teamID), FOREIGN KEY(visitingTeam) REFERENCES teams(teamID));
DONE need to find out how to include php files so i can move the lineup display code into a separate file/function
DONE need unique IDs for players and leagues and teams, etc.
DONE foreign keys! i.e. player names in the 'team' table should 'point to' some data in a player table. so a team is just a composite of players from the player table
DONE create players table and update team table to use entries in players table as foreign keys
DONE need to read up on relational tables and figure out how to structure my db with leagues/games/teams/players
DONE add dayOfWeek column to leagues table
